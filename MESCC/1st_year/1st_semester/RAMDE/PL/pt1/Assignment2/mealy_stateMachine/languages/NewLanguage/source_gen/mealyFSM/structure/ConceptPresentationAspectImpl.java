package mealyFSM.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_StateMachine;
  private ConceptPresentation props_action;
  private ConceptPresentation props_event;
  private ConceptPresentation props_state;
  private ConceptPresentation props_transition;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.StateMachine:
        if (props_StateMachine == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_StateMachine = cpb.create();
        }
        return props_StateMachine;
      case LanguageConceptSwitch.action:
        if (props_action == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_action = cpb.create();
        }
        return props_action;
      case LanguageConceptSwitch.event:
        if (props_event == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_event = cpb.create();
        }
        return props_event;
      case LanguageConceptSwitch.state:
        if (props_state == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_state = cpb.create();
        }
        return props_state;
      case LanguageConceptSwitch.transition:
        if (props_transition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_transition = cpb.create();
        }
        return props_transition;
    }
    return null;
  }
}
