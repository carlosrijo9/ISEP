 @article{UAV1,
  title  = {A Comprehensive Review of Recent Research Trends on UAVs},
  author = {Telli, Khaled and Kraa, O. and Himeur, Yassine and Ouamane, Abdelmalik and Boumehraz, Mohamed and Atalla, Shadi and Mansoor, Wathiq},
  year   = {2023},
  month  = aug
}


@article{UAV5,
  title        = {Reviews on Design and Development of Unmanned Aerial Vehicle (Drone) for Different Applications},
  volume       = {45},
  abstractnote = {The modern designs and their developments are essential based on their application; hence, UAV’s can be built with specific design and loading conditions. In this review for the first, a basic idea about UAVs considering required engineering aspects has been studied. The existing literature has been critically reviewed to extract the fundamental idea of UAVs such as fabrication method, design, materials, structures, classifications and so on. The UAVs in multiple applications such as the use of drones by law enforcement agencies, military, search, and rescue missions, etc. was highlighted. Based, on the existing work in drone technologies a critical analysis was made to extract the research gap and recommended accordingly. As result, with these guidelines, the drones can be built for specific purposes and applications like COVID-19 pandemic missions, policing surveillance, and large-scale sanitation of remote access areas.},
  journal      = {Journal of Mechanical Engineering Research and Developments},
  author       = {Aabid, Abdul and Parveez, Bisma and Parveen, Nagma and Khan, Sher and Raheman, Md Abdul and Zayan, Mohammed and Ahmed, Omar},
  year         = {2022},
  month        = apr,
  pages        = {53–69}
}


@article{UAV3,
  title        = {A Survey of Open-Source UAV Flight Controllers and Flight Simulators},
  volume       = {61},
  doi          = {10.1016/j.micpro.2018.05.002},
  abstractnote = {The current disruptive innovation in civilian drone (UAV) applications has led to an increased need for research and development in UAV technology. The key challenges currently being addressed are related to UAV platform properties such as functionality, reliability, fault tolerance, and endurance, which are all tightly linked to the UAV flight controller hardware and software. The lack of standardization of flight controller architectures and the use of proprietary closed-source flight controllers on many UAV platforms, however, complicates this work: solutions developed for one flight controller may be difficult to port to another without substantial extra development and testing. Using open-source flight controllers mitigates some of these challenges and enables other researchers to validate and build upon existing research. This paper presents a survey of the publicly available open-source drone platform elements that can be used for research and development. The survey covers open-source hardware, software, and simulation drone platforms and compares their main features.},
  journal      = {Microprocessors and Microsystems},
  author       = {Ebeid, Emad Samuel Malki and Skriver, Martin and Laursen, Kristian and Jensen, Kjeld and Schultz, Ulrik},
  year         = {2018},
  month        = may
}

@article{UAV6,
  title        = {UAV Positioning Mechanisms in Landing Stations: Classification and Engineering Design Review},
  volume       = {20},
  doi          = {10.3390/s20133648},
  abstractnote = {Landing platforms’ automation is aimed at servicing vertical take-off and landing UAVs between flights and maintaining their airworthiness. Over the last few years, different designs for the landing platforms have been proposed. This shows a strong development and establishment of automatic landing platforms with UAV positioning devices on the landing site. Positioning and safe fixation of the UAV are some of the main features of the landing platform, especially if it is mounted on a movable vehicle. This article focuses exclusively on the landing platform and its elements that provide the positioning of the UAV by affecting it during and after the landing. Both active devices and mechanisms and passive elements used for positioning are considered. This article, based on the review of recent patents and publications, gives the classification of positioning approaches used in landing stations with the analysis of the required landing precision, as well as the pros and cons of each type of approach.},
  journal      = {Sensors},
  author       = {Galimov, Musa and Fedorenko, Roman and Klimchik, Alexandr},
  year         = {2020},
  month        = jun,
  pages        = {3648}
}

@article{UAV2,
  title        = {AERIAL SURVEYING UAV BASED ON OPEN-SOURCE HARDWARE AND SOFTWARE},
  volume       = {38},
  doi          = {10.5194/isprsarchives-XXXVIII-1-C22-155-2011},
  abstractnote = {In the last years the functionality and type of UAV-systems increased fast, but unfortunately these systems are hardly available for researchers in some cases. A simple and low-cost solution was developed to build an autonomous aerial surveying airplane, which can fulfil the necessities (aerial photographs with very-high resolution) of other departments at the university and very useful and practical for teaching photogrammetry. The base was a commercial, remote controlled model airplane and an open-source GPS/IMU system (MatrixPilot) was adapted to achieve the semi-automatic or automatic stabilization and navigation of the model airplane along predefined trajectory. The firmware is completely open-source and easily available on the website of the project. The first used camera system was a low-budget, low-quality video camera, which could provide only 1.2 megapixel photographs or low resolution video depending on the light conditions and the desired spatial resolution. A field measurement test was carried out with the described system: the aerial surveying of an undiscovered archaeological site, signed by a crop-mark in mountain Pilis (Hungary).},
  journal      = {International Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences},
  author       = {Mészáros, János},
  year         = {2011},
  month        = jan
}

@article{UAV15,
  title        = {Development of a Novel Lightweight CNN Model for Classification of Human Actions in UAV-Captured Videos},
  volume       = {7},
  doi          = {10.3390/drones7030148},
  abstractnote = {There has been increased attention paid to autonomous unmanned aerial vehicles (UAVs) recently because of their usage in several fields. Human action recognition (HAR) in UAV videos plays an important role in various real-life applications. Although HAR using UAV frames has not received much attention from researchers to date, it is still a significant area that needs further study because of its relevance for the development of efficient algorithms for autonomous drone surveillance. Current deep-learning models for HAR have limitations, such as large weight parameters and slow inference speeds, which make them unsuitable for practical applications that require fast and accurate detection of unusual human actions. In response to this problem, this paper presents a new deep-learning model based on depthwise separable convolutions that has been designed to be lightweight. Other parts of the HarNet model comprised convolutional, rectified linear unit, dropout, pooling, padding, and dense blocks. The effectiveness of the model has been tested using the publicly available UCF-ARG dataset. The proposed model, called HarNet, has enhanced the rate of successful classification. Each unit of frame data was pre-processed one by one by different computer vision methods before it was incorporated into the HarNet model. The proposed model, which has a compact architecture with just 2.2 million parameters, obtained a 96.15% success rate in classification, outperforming the MobileNet, Xception, DenseNet201, Inception-ResNetV2, VGG-16, and VGG-19 models on the same dataset. The proposed model had numerous key advantages, including low complexity, a small number of parameters, and high classification performance. The outcomes of this paper showed that the model’s performance was superior to that of other models that used the UCF-ARG dataset.},
  journal      = {Drones},
  author       = {Othman, Nashwan and Aydin, Ilhan},
  year         = {2023},
  month        = feb,
  pages        = {148}
}

@article{UAV4,
  title        = {On-board processing for autonomous drone racing: An overview},
  volume       = {80},
  issn         = {0167-9260},
  doi          = {10.1016/j.vlsi.2021.04.007},
  abstractnote = {The first Autonomous Drone Racing (ADR) was launched in the IEEE IROS 2016, and continued to be organised in IROS 2017, 2018 and 2019. Inspired by this competition, other international competitions were launched: the AlphaPilot organised by Lockheed Martin in collaboration with the Drone Racing League, and the Game of Drones, organised by Microsoft and Stanford University. A distinctive feature in the IROS ADR and AlphaPilot competitions is that competing drones had to perform on-board processing only. Hence, along these years, teams have presented novel solutions for on-board processing based on a Graphic Processing Unit (GPU), a Field-Programmable Gate Array (FPGA), microcontrollers and embedded computers such as the Odroid or Intel Stick computers. Motivated by the variety of these solutions, the goal of this work is that of providing the reader with a detail description of the hardware used for the competitions, their benefits as much as limitations, including those microchips used in specialised sensors such as the RGB-D and stereo cameras whose data processing is carried out on the sensor itself. It is expected to conclude that GPU will stand out as the best hardware to compute complex processing on-board, in particular due to the use of deep learning not only to address the gate detection problem, but also to address the control and planning tasks involved in this challenge.},
  journal      = {Integration},
  author       = {Rojas-Perez, L. Oyuki and Martinez-Carranza, J.},
  year         = {2021},
  month        = sep,
  pages        = {46–59}
}


@inbook{UAV11,
  title        = {Overview of Drone Communication Requirements in 5G},
  isbn         = {978-3-031-20935-2},
  doi          = {10.1007/978-3-031-20936-9 1},
  abstractnote = {The ease of use and flexibility provided by drones or Unmanned Aerial vehicles (UAV) is attracting different industries and researchers across domains (e.g., delivery, agriculture, security, etc.). Although maintaining a reliable and secure command and control communication channel is still an open challenge and primary limitation for using drones. Satellite and 5G are considered viable solutions for drone communication. In this survey paper, we have explored specifications and proposed enhancements in cellular technology specified by 3GPP to command and control UAVs. It also describes the required network Quality of Service (QoS) parameters for drone communication. Such as end-to-end latency to send and receive a command and control message (C2), reliability, and message size. Along with these, it also emphasizes defining the reliability in terms of communication and navigation of UAVs, based on cellular technology 5G additional investigation and standardization should be executed.},
  author       = {Singh, Radheshyam and Ballal, Kalpit and Berger, Michael and Dittmann, Lars},
  year         = {2023},
  month        = jan,
  pages        = {3–16}
}

@article{UAV8,
  title        = {UAV Swarm Communication and Control Architectures: A Review},
  volume       = {7},
  doi          = {10.1139/juvs-2018-0009},
  abstractnote = {Unmanned aerial vehicles (UAVs) have significantly disrupted the aviation industry. As technology and policy continue to develop, this disruption is only going to increase in magnitude. A specific technology poised to escalate this disruption is UAV swarm. UAV swarm has the potential to distribute tasks and coordinate operation of many UAVs with little to no operator intervention. This paper surveys literature regarding UAV swarm and proposes a swarm architecture that will allow for higher levels of swarm autonomy and reliability by utilizing cellular mobile wireless communication infrastructure. This paper chronicles initial testbed development to meet this proposed architecture. Focused development of UAV swarms with UAV-to-UAV communication autonomous coordination ability is central to advancing the utility of UAV swarms. The use of cellular mobile framework alleviates many limiting factors that hinder the utility of UAVs including range of communication, networking challenges, and size-weight-and-power considerations. In addition, cellular networks leverage a robust and reliable infrastructure for machine to machine communication proposed by 5G systems.},
  journal      = {Journal of Unmanned Vehicle Systems},
  author       = {Campion, Mitchell and Prakash, Ranganathan and Faruque, Saleh},
  year         = {2018},
  month        = nov
}

@article{UAV7,
  title        = {A Review of Quadrotor UAV: Control Methodologies and Performance Evaluation},
  volume       = {10},
  doi          = {10.1504/IJAAC.2016.076453},
  abstractnote = {Quadrotor a kind of multirotor unmanned air vehicle has gained popularity within research community due to its high manoeuvrability, vertical take-off, landing and hovering capability, and ease of operation in areas where traditional unmanned air vehicle have proved ineffective. This article provides a comprehensive survey of research methodologies proposed for quadrotor control. The methodologies are categorised into three different control design domains and each methodology is discussed in detail. Finally, we discuss the evaluation criteria used for the aforementioned methodologies and highlight the potential challenges that still need to be addressed in quadrotor control domain.},
  journal      = {International Journal of Automation and Control},
  author       = {Amin, Rooh and Aijun, Li and Band, Shahab},
  year         = {2015},
  month        = dec
}

%-------------------------------------------------------------------------------%

 @article{VPP1,
  title        = {An Actuator Allocation Method for a Variable-Pitch Propeller System of Quadrotor-Based UAVs},
  volume       = {20},
  doi          = {10.3390/s20195651},
  abstractnote = {This paper presents a control allocation method for enhancing the attitude following performance and the energy efficiency of a variable-pitch propeller (VPP) system on quadrotor-based unmanned aerial vehicles. The VPP system was modeled according to the blade element momentum (BEM) theory, and an actuator allocation method was developed with the aim of enhancing the attitude control and energy performance. A simulation environment was built to validate the VPP system by creating a thrust and moment database from the experiments. A four-motor variable-pitch quadrotor was built for verifying the proposed method. The control allocation method was firstly verified in a simulation environment, and was then implemented in a flight controller for indoor flight experiments. The simulation results show the proposed control allocation method greatly improves the yaw following performance. The experimental results demonstrate a difference in the energy consumption through various pitch angles, as well as a reduction in energy consumption, by applying this VPP system.},
  journal      = {Sensors (Basel, Switzerland)},
  author       = {Chang, Ching-Wei and Chen, Shengyang and Wen, Chih-Yung and Li, Boyang},
  year         = {2020},
  month        = oct
}

 @misc{VPP2,
  title        = {Variable Pitch Propeller Aeronautics: Most Up-to-Date Encyclopedia, News \& Reviews},
  url          = {https://academic-accelerator.com/encyclopedia/variable-pitch-propeller-aeronautics},
  abstractnote = {Get the latest Variable Pitch Propeller Aeronautics research reviews, science news \& scholar articles. View the most complete encyclopedia by Academic Accelerator.},
  journal      = {Academic Accelerator},
  author       = {Accelerator, Academic},
  language     = {en}
}

 @article{VPP3,
  title        = {Systematic design methodology for development and flight testing of a variable pitch quadrotor biplane VTOL UAV for payload delivery},
  volume       = {55},
  issn         = {09574158},
  doi          = {10.1016/j.mechatronics.2018.08.008},
  abstractnote = {Semantic Scholar extracted view of “Systematic design methodology for development and flight testing of a variable pitch quadrotor biplane VTOL UAV for payload delivery” by Vishnu S. Chipade et al.},
  journal      = {Mechatronics},
  author       = {Chipade, Vishnu S. and Abhishek and Kothari, Mangal and Chaudhari, Rushikesh R.},
  year         = {2018},
  month        = nov,
  pages        = {94–114},
  language     = {en}
}

%-------------------------------------------------------------------------------%
@phdthesis{FPP1,
  title        = {Design and Control of an Autonomous Variable-Pitch Quadrotor Helicopter},
  abstractnote = {The aerospace community, particularly in academia, has seen a recent rise in the popularity of fixed-pitch quadrotor helicopters. The fixed-pitch quadrotor is popular largely because of its mechanical simplicity relative to other hovering aircraft. This simplicity, however, places fundamental limits on the achievable actuator bandwidth and the types of maneuvers possible to fly. This thesis explores the extent to which the addition of variable-pitch propellers to a quadrotor helicopter overcomes these limitations. A detailed analysis of the potential benefits of variable-pitch propellers over fixed-pitch propellers for a quadrotor is presented. This analysis is supported with experimental testing to show that variable-pitch propellers, in addition to allowing for efficient generation of negative thrust, substantially increase the maximum rate of thrust change. A nonlinear, quaternion-based control algorithm is presented for controlling the quadrotor. An accompanying trajectory generation method is detailed with an optimization routine for finding minimum-time paths through waypoints. The control law and trajectory generation algorithms are implemented in simulation and on a custom variable-pitch quadrotor. The quadrotor attitude control is performed on the vehicle using a custom autopilot. Position and attitude measurements are made with an off-board motion capture system. Several flight tests are shown with a particular emphasis on the benefits of a variable-pitch qaudrotor over a standard fixed-pitch quadrotor for performing aggressive and aerobatics maneuvers. To the best of the author’s knowledge, this work marks the first documented, autonomous variable-pitch quadrotor built for agile and aggressive flight.},
  author       = {Cutler, Mark},
  year         = {2012},
  month        = aug
}

%-------------------------------------------------------------------------------%

 @inproceedings{RTOS3,
  title        = {Real-time operating system (RTOS) for small (16-bit) microcontroller},
  issn         = {2159-1423},
  url          = {https://ieeexplore.ieee.org/abstract/document/5156833},
  doi          = {10.1109/ISCE.2009.5156833},
  abstractnote = {Real-time operating system (RTOS) is gaining increasing use not only in 32-bit systems but also in 16-bit systems. RTOS is different from generic OS by several unique characteristics and the use of RTOS in embedded system development proves to be more advantageous. In this paper, 9 RTOSes targeting smaller processors have been evaluated and four of the RTOSes have been selected for performance benchmarking on the same M16/62P microcontroller platform to avoid bias. Based on the comparison, the μTKernel RTOS is chosen for porting to the H8S/2377 16-bit microcontroller to demonstrate the ease of RTOS platform migration. The same version of μTKernel RTOS running on different platforms are then compared. Lastly, an application is developed with the RTOS to demonstrate the ease of multi-task application development on such microcontroller platform.},
  booktitle    = {2009 IEEE 13th International Symposium on Consumer Electronics},
  author       = {Tan, Su-Lim and Anh, Tran Nguyen Bao},
  year         = {2009},
  month        = may,
  pages        = {1007–1011}
}

 @article{RTOS4,
  title        = {Impact of Embedded Systems Evolution on RTOS Use and Design},
  abstractnote = {In this paper, we discuss how the evolution of embedded systems has impacted on the design and usage of Real-Time Operating Systems (RTOS). Speciﬁcally, we consider issues that result from the integration of complex requirements for embedded systems. Integration has been identiﬁed as a complex issue in various ﬁelds such as automotive, critical systems (aerospace, nuclear etc) and consumer electronics. In addition, the pressure on time-to-market, the emergence of multi-site development, and the ever-increasing size of software stacks are driving radical changes in the development approaches of modern applications. These complex requirements have placed greater requirements on Operating Systems with respect to how interfaces are deﬁned and how resources are managed. These requirements are expanded and justiﬁed through the course of this paper. The requirements are then discussed in the context of emerging solutions from a number of domains.},
  author       = {Andrews, David and Bate, Iain and Nolte, Thomas and Perez, Clara M Otero and Petters, Stefan M},
  language     = {en}
}
 @inproceedings{RTOS2,
  title        = {Abstract RTOS modeling for embedded systems},
  issn         = {1074-6005},
  url          = {https://ieeexplore.ieee.org/abstract/document/1311119},
  doi          = {10.1109/IWRSP.2004.1311119},
  abstractnote = {Raising the abstraction level is widely seen as a solution to increase productivity, in order to handle the growing complexity of real-time embedded applications and the time-to-market pressures. In this context, the use of a real-time operating system (RTOS) becomes extremely important to the development of applications with real-time systems requirements. However, the use of a detailed RTOS at early design phases is a contra sense, and the existing system level description languages (SLDL) lack support for RTOS modeling at higher abstraction levels. In this paper, we introduce an abstract RTOS model, and a set of refinement steps that allows refining the abstract model to an implementation model at lower abstraction levels. This abstract RTOS model provides the main features available in a typical RTOS, permitting the designer to model parallel and concurrent behavior of real-time embedded applications at higher abstraction levels. We use SystemC language with some extensions to build the abstract RTOS model, allowing a quick evaluation of different scheduling algorithms and synchronization mechanisms at the early stage of system design. An experimental result with a telecom system that consists of fifty tasks with four priority levels shows the usefulness of this model.},
  booktitle    = {Proceedings. 15th IEEE International Workshop on Rapid System Prototyping, 2004.},
  author       = {Hessel, F. and da Rosa, V.M. and Reis, I.M. and Planner, R. and Marcon, C.A.M. and Susin, A.A.},
  year         = {2004},
  month        = jun,
  pages        = {210–216}
}
 @article{RTOS1,
  title        = {Selection of RTOS for an Efficient Design of Embedded Systems},
  abstractnote = {Real Time Operating System (RTOS) is a basic building block of most of the Embedded Systems (ES). There are wide ranges of RTOS’s available to the designers/ developers of ES’s ranging from RTOS for robotics to home appliances. Each application demands a specialized set of requirements and to meet these requirements the designer needs to select the RTOS, which meets the desired requirements. It is a critical task for him/her and time consuming because it involves to know all the specifications of different RTOS and there are various RTOS’s available in the market that include micro kernels to commercial RTOS’s . So it is the task of the designer to select the suitable RTOS from the vast list of RTOS’s. The design space available to any RTOS is very large and there are countless set of characteristics such as Development Methodology, Scheduling Algorithms, Kind of Real Time (Soft of Hard), Priority Levels, Development Host, Standards followed, Kernel ROM size, Kernel RAM size, Multi process Support, Multiprocessor Support, Interrupt latency, Task Switching time, Kind of IPC mechanism, Memory management, Power management, Task management, Price etc. These characteristics will guide the designer for selecting the RTOS that meets the requirements. Selecting the RTOS based on these parameters is a multidimensional search problem with each dimension corresponds to a RTOS characteristic and it requires an exhaustive search with tremendous computing resources and time. In our framework of RTOS selection, we have used the Simple Genetic Algorithm (GA) with interactive GUI by which the developer can choose the right RTOS for a given application or a project efficiently.},
  author       = {Reddy, S Ramanarayana},
  year         = {2006},
  language     = {en}
}

 @misc{RTOS5,
  title        = {RTOS: Real-Time Operating Systems for Embedded Developers},
  url          = {https://blog.nordicsemi.com/getconnected/what-is-rtos-real-time-operating-systems-for-embedded-developers},
  abstractnote = {Embedded developers are often accustomed to bare metal programming or have reservations on using an RTOS. Find out more, and why you should consider one.},
  journal      = {NORDIC Semiconductor},
  author       = {Skoien, Kristoffer},
  year         = {2021},
  month        = jun,
  language     = {en-gb}
}

 @misc{RTOS6,
  title        = {FreeRTOS vs ThreadX vs Zephyr: The Fight For True Open Source RTOS},
  url          = {https://www.iiot-world.com/industrial-iot/connected-industry/freertos-vs-threadx-vs-zephyr-the-fight-for-true-open-source-rtos/},
  abstractnote = {Now, critics question if either of the systems will remain truly open source, especially since both parent companies have previously engaged in lock-in practices.},
  journal      = {IIoT World},
  author       = {Gregersen, About The Author Carsten Rhod},
  year         = {2023},
  month        = jan,
  language     = {en-US}
}
 @misc{compRTOS,
  url          = {https://micro.ros.org/docs/concepts/rtos/comparison/},
  abstractnote = {In this section, we present a techincal comparison between the three RTOSes supported by micro-ROS: NuttX FreeRTOS Zephyr},
  journal      = {micro-ROS},
  year         = {2023},
  month        = nov,
  language     = {en-US}
}

 @misc{chibios,
  url = {https://www.chibios.org/dokuwiki/doku.php?id=chibios:documentation:books:rt:intro}
}
 @misc{zephyr,
  url = {https://docs.zephyrproject.org/latest/introduction/index.html}
}
 @misc{nuttx,
  url = {https://nuttx.apache.org/docs/latest/introduction/about.html}
}


%-------------------------------------------------------------------------------%

 @book{LPROG1,
  title        = {Hands-On RTOS with Microcontrollers: Building real-time embedded systems using FreeRTOS, STM32 MCUs, and SEGGER debug tools},
  isbn         = {978-1-83882-928-5},
  abstractnote = {Build a strong foundation in designing and implementing real-time systems with the help of practical examplesKey FeaturesGet up and running with the fundamentals of RTOS and apply them on STM32Enhance your programming skills to design and build real-world embedded systemsGet to grips with advanced techniques for implementing embedded systemsBook DescriptionA real-time operating system (RTOS) is used to develop systems that respond to events within strict timelines. Real-time embedded systems have applications in various industries, from automotive and aerospace through to laboratory test equipment and consumer electronics. These systems provide consistent and reliable timing and are designed to run without intervention for years. This microcontrollers book starts by introducing you to the concept of RTOS and compares some other alternative methods for achieving real-time performance. Once you’ve understood the fundamentals, such as tasks, queues, mutexes, and semaphores, you’ll learn what to look for when selecting a microcontroller and development environment. By working through examples that use an STM32F7 Nucleo board, the STM32CubeIDE, and SEGGER debug tools, including SEGGER J-Link, Ozone, and SystemView, you’ll gain an understanding of preemptive scheduling policies and task communication. The book will then help you develop highly efficient low-level drivers and analyze their real-time performance and CPU utilization. Finally, you’ll cover tips for troubleshooting and be able to take your new-found skills to the next level. By the end of this book, you’ll have built on your embedded system skills and will be able to create real-time systems using microcontrollers and FreeRTOS.What you will learnUnderstand when to use an RTOS for a projectExplore RTOS concepts such as tasks, mutexes, semaphores, and queuesDiscover different microcontroller units (MCUs) and choose the best one for your projectEvaluate and select the best IDE and middleware stack for your projectUse professional-grade tools for analyzing and debugging your applicationGet FreeRTOS-based applications up and running on an STM32 boardWho this book is forThis book is for embedded engineers, students, or anyone interested in learning the complete RTOS feature set with embedded devices. A basic understanding of the C programming language and embedded systems or microcontrollers will be helpful.},
  note         = {Google-Books-ID: oTDnDwAAQBAJ},
  publisher    = {Packt Publishing Ltd},
  author       = {Amos, Brian},
  year         = {2020},
  month        = may,
  language     = {en}
}
 @misc{LPROG2,
  title        = {Embedded Software Programming Languages: Pros, Cons, and Comparisons of Popular Languages},
  url          = {https://www.qt.io/embedded-development-talk/embedded-software-programming-languages-pros-cons-and-comparisons-of-popular-languages},
  abstractnote = {Learn about programming languages for embedded systems, pros & cons of popular languages, download a comparison table, and expert advice.},
  journal      = {Embedded Development Talk},
  author       = {Avila, Risto},
  year         = {2022},
  month        = mar,
  language     = {en}
}
 @inproceedings{LPROG3,
  title  = {Comparison of high-level programming languages efficiency in embedded systems},
  doi    = {10.1117/12.2537143},
  author = {Choroszucho, Agnieszka and Golonko, Piotr and Bednarek, Jakub and Sumorek, Mateusz and Żukowski, Jakub},
  year   = {2019},
  month  = nov,
  pages  = {208}
}
 @article{LPROG4,
  title        = {Languages for the programming of real-time embedded systems a survey and comparison},
  volume       = {20},
  issn         = {0141-9331},
  doi          = {10.1016/0141-9331(95)01067-X},
  abstractnote = {The choice of programming language for use in a real-time embedded systems project can be a crucial one. It is clear, however, that decisions are frequently made purely on commercial and/or ‘fashion’ grounds rather than technical aspects. While commercial factors are often the more important, software developers should be aware of the associated technical implications. This paper details the technical requirements of real-time embedded systems programming: then evaluates a variety of modern languages in the light of such requirements. A general overview of 13 languages is given, followed by a detailed evaluation of Ada, C, C++, Modula-2/Pascal and Oberon-2.},
  number       = {2},
  journal      = {Microprocessors and Microsystems},
  author       = {Cooling, J. E.},
  year         = {1996},
  month        = apr,
  pages        = {67–77}
}
 @misc{LPROG5,
  title        = {All You Need To Know About Embedded Systems Programming},
  url          = {https://sam-solutions.us/all-you-need-to-know-about-embedded-systems-programming/},
  abstractnote = {We will learn about operation systems and languages used to create Emdedded systems,  the various ways that these systems are built and how software influences everything around us.},
  journal      = {SaM Solutions},
  author       = {Koshkin, Dmitry},
  year         = {2020},
  month        = may,
  language     = {en-US}
}
 @article{LPROG6,
  title        = {An empirical comparison of seven programming languages},
  volume       = {33},
  issn         = {1558-0814},
  doi          = {10.1109/2.876288},
  abstractnote = {Often heated, debates regarding different programming languages’ effectiveness remain inconclusive because of scarce data and a lack of direct comparisons. The author addresses that challenge, comparatively analyzing 80 implementations of the phone-code program in seven different languages (C, C++, Java, Perl, Python, Rexx and Tcl). Further, for each language, the author analyzes several separate implementations by different programmers. The comparison investigates several aspects of each language, including program length, programming effort, runtime efficiency, memory consumption, and reliability. The author uses comparisons to present insight into program language performance.},
  number       = {10},
  journal      = {Computer},
  author       = {Prechelt, L.},
  year         = {2000},
  month        = oct,
  pages        = {23–29}
}
 @misc{LPROG7,
  url          = {https://www.linkedin.com/pulse/5-best-embedded-systems-programming-languages-pros},
  abstractnote = {Embedded systems play a crucial role in various industries, powering various devices and applications. These systems often require specialized knowledge and skills to develop, maintain, and optimize.},
  year         = {2023},
  month        = aug,
  language     = {en}
}


%-------------------------------------------------------------------------------%

 @article{WCOM4,
  title        = {Survey of Important Issues in UAV Communication Networks},
  volume       = {18},
  issn         = {1553-877X},
  doi          = {10.1109/COMST.2015.2495297},
  abstractnote = {Unmanned aerial vehicles (UAVs) have enormous potential in the public and civil domains. These are particularly useful in applications, where human lives would otherwise be endangered. Multi-UAV systems can collaboratively complete missions more efficiently and economically as compared to single UAV systems. However, there are many issues to be resolved before effective use of UAVs can be made to provide stable and reliable context-specific networks. Much of the work carried out in the areas of mobile ad hoc networks (MANETs), and vehicular ad hoc networks (VANETs) does not address the unique characteristics of the UAV networks. UAV networks may vary from slow dynamic to dynamic and have intermittent links and fluid topology. While it is believed that ad hoc mesh network would be most suitable for UAV networks yet the architecture of multi-UAV networks has been an understudied area. Software defined networking (SDN) could facilitate flexible deployment and management of new services and help reduce cost, increase security and availability in networks. Routing demands of UAV networks go beyond the needs of MANETS and VANETS. Protocols are required that would adapt to high mobility, dynamic topology, intermittent links, power constraints, and changing link quality. UAVs may fail and the network may get partitioned making delay and disruption tolerance an important design consideration. Limited life of the node and dynamicity of the network lead to the requirement of seamless handovers, where researchers are looking at the work done in the areas of MANETs and VANETs, but the jury is still out. As energy supply on UAVs is limited, protocols in various layers should contribute toward greening of the network. This paper surveys the work done toward all of these outstanding issues, relating to this new class of networks, so as to spur further research in these areas.},
  number       = {2},
  journal      = {IEEE Communications Surveys \& Tutorials},
  author       = {Gupta, Lav and Jain, Raj and Vaszkun, Gabor},
  year         = {2016},
  pages        = {1123–1152}
}
 @article{WCOM2,
  title        = {A Tutorial on UAVs for Wireless Networks: Applications, Challenges, and Open Problems},
  volume       = {21},
  issn         = {1553-877X},
  doi          = {10.1109/COMST.2019.2902862},
  abstractnote = {The use of flying platforms such as unmanned aerial vehicles (UAVs), popularly known as drones, is rapidly growing. In particular, with their inherent attributes such as mobility, flexibility, and adaptive altitude, UAVs admit several key potential applications in wireless systems. On the one hand, UAVs can be used as aerial base stations to enhance coverage, capacity, reliability, and energy efficiency of wireless networks. On the other hand, UAVs can operate as flying mobile terminals within a cellular network. Such cellular-connected UAVs can enable several applications ranging from real-time video streaming to item delivery. In this paper, a comprehensive tutorial on the potential benefits and applications of UAVs in wireless communications is presented. Moreover, the important challenges and the fundamental tradeoffs in UAV-enabled wireless networks are thoroughly investigated. In particular, the key UAV challenges such as 3D deployment, performance analysis, channel modeling, and energy efficiency are explored along with representative results. Then, open problems and potential research directions pertaining to UAV communications are introduced. Finally, various analytical frameworks and mathematical tools, such as optimization theory, machine learning, stochastic geometry, transport theory, and game theory are described. The use of such tools for addressing unique UAV problems is also presented. In a nutshell, this tutorial provides key guidelines on how to analyze, optimize, and design UAV-based wireless communication systems.},
  number       = {3},
  journal      = {IEEE Communications Surveys \& Tutorials},
  author       = {Mozaffari, Mohammad and Saad, Walid and Bennis, Mehdi and Nam, Young-Han and Debbah, Mérouane},
  year         = {2019},
  pages        = {2334–2360}
}
 @article{WCOM3,
  title        = {A review on communication protocols for autonomous unmanned aerial vehicles for inspection application},
  volume       = {86},
  issn         = {0141-9331},
  doi          = {10.1016/j.micpro.2021.104340},
  abstractnote = {The communication system is a critical part of the system design for the autonomous Unmanned Aerial Vehicle (UAV). It has to address different considerations, including efficiency, reliability and mobility of the UAV. In addition, a multi-UAV system requires a communication system to assist information sharing, task allocation and collaboration in a team of UAVs. In this paper, we review communication solutions for supporting a team of UAVs while considering an application in the power line inspection industry. We provide a review of candidate wireless communication technologies for supporting communication in UAV applications. Performance measurements and UAV-related channel modeling of those candidate technologies are reviewed. A discussion of current technologies for building UAV mesh networks is presented. We then analyze the structure, interface and performance of robotic communication middleware, ROS and ROS2. Based on our review, the features and dependencies of candidate solutions in each layer of the communication system are presented.},
  journal      = {Microprocessors and Microsystems},
  author       = {Shi, Liping and Marcano, Néstor J. Hernández and Jacobsen, Rune Hylsberg},
  year         = {2021},
  month        = oct,
  pages        = {104340}
}
 @article{WCOM1,
  title        = {Wireless communications with unmanned aerial vehicles: opportunities and challenges},
  volume       = {54},
  issn         = {1558-1896},
  doi          = {10.1109/MCOM.2016.7470933},
  abstractnote = {Wireless communication systems that include unmanned aerial vehicles promise to provide cost-effective wireless connectivity for devices without infrastructure coverage. Compared to terrestrial communications or those based on high-altitude platforms, on-demand wireless systems with low-altitude UAVs are in general faster to deploy, more flexibly reconfigured, and likely to have better communication channels due to the presence of short-range line-of-sight links. However, the utilization of highly mobile and energy-constrained UAVs for wireless communications also introduces many new challenges. In this article, we provide an overview of UAV-aided wireless communications, by introducing the basic networking architecture and main channel characteristics, highlighting the key design considerations as well as the new opportunities to be exploited.},
  number       = {5},
  journal      = {IEEE Communications Magazine},
  author       = {Zeng, Yong and Zhang, Rui and Lim, Teng Joon},
  year         = {2016},
  month        = may,
  pages        = {36–42}
}

 @article{WCOM5,
  title        = {Comprehensive survey of UAVs communication networks},
  volume       = {72},
  issn         = {0920-5489},
  doi          = {10.1016/j.csi.2020.103451},
  abstractnote = {Recently, technologies related to Unmanned Aerial Vehicle (UAV) are growing rapidly particularly sensors, networking, and processing technologies. Accordingly, governments and industry have heavily invested in the studies of UAVs and improvingtheir performances for reliable and secure deployments. The design methods and the investigation of UAVs systems have progressed from mono-UAV uses to multi-UAVs and cooperative UAVs systems that need a high level of coordination and collaboration to perform tasks which require new networking models, approaches, and mechanisms for highly mobile nodes involving many complex parameters and constraints. In this context, this paper provides more details and offers a thorough investigation concerning UAV communication protocols, networking systems, architectures, and applications. In addition, we discuss UAV solutions as well as highlighting important technical challenges and open research issues requiring further studies and R\&D work.},
  journal      = {Computer Standards \& Interfaces},
  author       = {Hentati, Aicha Idriss and Fourati, Lamia Chaari},
  year         = {2020},
  month        = oct,
  pages        = {103451}
}

 @article{WCOM7,
  title        = {Bluetooth and Wi-Fi wireless protocols: a survey and a comparison},
  volume       = {12},
  issn         = {1558-0687},
  doi          = {10.1109/MWC.2005.1404569},
  abstractnote = {Bluetooth and IEEE 802.11 (Wi-Fi) are two communication protocol standards that define a physical layer and a MAC layer for wireless communications within a short range (from a few meters up to 100 m) with low power consumption (from less than 1 mW up to 100 mW). Bluetooth is oriented to connecting close devices, serving as a substitute for cables, while Wi-Fi is oriented toward computer-to-computer connections, as an extension of or substitution for cabled LANs. In this article we offer an overview of these popular wireless communication standards, comparing their main features and behaviors in terms of various metrics, including capacity, network topology, security, quality of service support, and power consumption.},
  number       = {1},
  journal      = {IEEE Wireless Communications},
  author       = {Ferro, E. and Potorti, F.},
  year         = {2005},
  month        = feb,
  pages        = {12–26}
}

@article{WCOM6,
  title        = {Machine-to-machine wireless communication technologies for the Internet of Things: Taxonomy, comparison and open issues},
  volume       = {50},
  issn         = {1574-1192},
  doi          = {10.1016/j.pmcj.2018.08.002},
  abstractnote = {Machine-to-Machine (M2M) communication technologies enable autonomous networking among devices without human intervention. Such autonomous control is of paramount importance for several deployments of the Internet of Things (IoT), including smart manufacturing applications, healthcare systems and home automation just to name a few. As a result, several M2M technologies are nowadays available on the market as either proprietary solutions or the effort of standardization initiatives, each targeted for a specific class of IoT applications and characterized by unique features in terms of achievable performance, frequency in use and supported network topologies. In this paper, we aim to organize the existing M2M approaches and technologies into a consistent framework that provides an in-depth vision of the main trends, future directions and open issues. We provide three main contributions in this survey. First, we identify the main use cases and requirements of M2M scenarios and we introduce a multi-layer taxonomy for M2M solutions, taking into account both deployment types and PHY/MAC characteristics. Second, in light of such characteristics, we provide an in-depth review of the existing M2M wireless technologies, considering both proprietary and open/standardized solutions for proximity-based, short-range and large-scale networks. Finally, we perform a critical comparison of the surveyed solutions over different M2M use cases and requirements, and we identify the research directions and open issues that still have to be addressed.},
  journal      = {Pervasive and Mobile Computing},
  author       = {Montori, Federico and Bedogni, Luca and Di Felice, Marco and Bononi, Luciano},
  year         = {2018},
  month        = oct,
  pages        = {56–81}
}

 @misc{WCOM8,
  title        = {Short range wireless communication technology vs long range wireless communication technology},
  url          = {https://www.mokosmart.com/short-range-wireless-communication-technology-vs-long-range-wireless-communication-technology/},
  abstractnote = {Short range wireless communication technology and long range wireless communication technology,which one fits you best?},
  journal      = {MOKOSmart},
  author       = {Kuan, Fiona},
  year         = {2022},
  month        = sep,
  language     = {en-US}
}

 @article{WCOM9,
  title        = {LoRaWAN Mesh Networks: A Review and Classification of Multihop Communication},
  volume       = {20},
  issn         = {1424-8220},
  doi          = {10.3390/s20154273},
  abstractnote = {The growth of the Internet of Things (IoT) led to the deployment of many applications that use wireless networks, like smart cities and smart agriculture. Low Power Wide Area Networks (LPWANs) meet many requirements of IoT, such as energy efficiency, low cost, large coverage area, and large-scale deployment. Long Range Wide Area Network (LoRaWAN) networks are one of the most studied and implemented LPWAN technologies, due to the facility to build private networks with an open standard. Typical LoRaWAN networks are single-hop in a star topology, composed of end-devices that transmit data directly to gateways. Recently, several studies proposed multihop LoRaWAN networks, thus forming wireless mesh networks. This article provides a review of the state-of-the-art multihop proposals for LoRaWAN. In addition, we carried out a comparative analysis and classification, considering technical characteristics, intermediate devices function, and network topologies. This paper also discusses open issues and future directions to realize the full potential of multihop networking. We hope to encourage other researchers to work on improving the performance of LoRaWAN mesh networks, with more theoretical and simulation analysis, as well as practical deployments.},
  number       = {15},
  journal      = {Sensors (Basel, Switzerland)},
  author       = {Cotrim, Jeferson Rodrigues and Kleinschmidt, João Henrique},
  year         = {2020},
  month        = jul,
  pages        = {4273}
}

 @misc{WCOM10,
  url          = {https://www.thethingsnetwork.org/docs/lorawan/architecture/},
  abstractnote = {We are building a global open free crowdsourced long range low power IoT data network},
  journal      = {The Things Network},
  language     = {en-us}
}

 @phdthesis{WCOM11,
  title        = {Indoor Location Systems based on ZigBee networks},
  doi          = {10.13140/2.1.4300.1126},
  abstractnote = {In the last few years, Indoor Location Systems have been a major investigation branch in the Research and Development area. They got an special importance after the popularization of GPS which allows Outdoor Location with an accurate precision. However, GPS is not operative inside buildings where mostly human activities occur, as there is no direct line-of-sight between the antenna and satellites, the signals suffer from reflections, scattering and diffractions. The aim of this thesis is to implement an Indoor Location System able to locate a person inside a room, flat or building. Moreover, the ILS must be a low cost and low consumption system so that it can be a considered market option. It also should be open-hardware and open-source and easy to install what will make the project to be spread and improved. For this goal, the project has two different branches of research: low consumption and low cost hardware.},
  author       = {Gutierrez Pascual, M. Deseada},
  year         = {2012},
  month        = may
}

 @article{WCOM12,
  title        = {A Hybrid Communication Scheme for Efficient and Low-Cost Deployment of Future Flying Ad-Hoc Network (FANET)},
  volume       = {3},
  doi          = {10.3390/drones3010016},
  abstractnote = {In the recent years, FANET-related research and development has doubled, due to the increased demands of Unmanned Aerial Vehicles (UAVs) in both military and civilian operations. Equipped with more capabilities and unique characteristics, FANET is able to play a vital role in mission-critical applications. However, these distinctive features enforce a series of guidelines to be considered for its efficient deployment. Particularly, the use of FANET for on-time data communication services presents demanding challenges in terms of energy-efficiency and Quality-of-Service (QoS). Proper use of communication architecture and wireless technology will assist to solve these challenges. Therefore, in this paper, we review different communication architectures, including the existing wireless technologies, in order to provide seamless wireless connectivity. Based on the discussions, we conclude that multi-layer UAV ad-hoc network is the most suitable architecture for networking a group of heterogeneous UAVs, while Bluetooth 5 (802.15.1) is the most favorite option because of its low-cost, less power consumption and longer transmission range for FANET. However, 802.15.1 has the limitation of lower data rate as compared to Wi-Fi (802.11). Therefore, we propose a hybrid wireless communication scheme so as to utilize the features of high data transmission rate of 802.11, and low-power consumption of 802.15.1. The proposed scheme significantly reduces communication cost and improves the network performance in terms of throughput and delay. Further, simulation results using OPNET seconds the effectiveness of our proposed scheme.},
  author       = {Khan, Muhammad and Qureshi, Ijaz and Khanzada, Fahim},
  year         = {2019},
  month        = feb,
  pages        = {22}
}

%-------------------------------------------------------------------------------%


@inproceedings{BATT1,
  author    = {Tuan Do, Quang and Shumeye Lakew, Demeke and Tien Tran, Anh and Thien Hua, Duc and Cho, Sungrae},
  booktitle = {2023 International Conference on Information Networking (ICOIN)},
  title     = {A Review on Recent Approaches in mmWave UAV-aided Communication Networks and Open Issues},
  year      = {2023},
  volume    = {},
  number    = {},
  pages     = {728-731},
  doi       = {10.1109/ICOIN56518.2023.10049043}
}

 @article{BATT2,
  title        = {Design methodology for battery powered embedded systems — In safety critical application},
  volume       = {31},
  issn         = {0920-5489},
  doi          = {10.1016/j.csi.2008.06.013},
  abstractnote = {Battery powered embedded system can be considered as a power aware system for a safety critical application. There is a need of saving the battery power for such power aware system so that it can be used more efficiently, particularly in safety critical applications. Present paper describes power optimization procedure using real time scheduling technique having a specific dead line guided by the model based optimum current discharge profile of a battery. In any power aware system ‘energy optimization’ is one of the major issues for a faithful operation.},
  number       = {2},
  journal      = {Computer Standards & Interfaces},
  author       = {Chowdury, Joydeb Roy and Pattanayak, Sayantica and Bhattacharjee, A. K.},
  year         = {2009},
  month        = feb,
  pages        = {499–503}
}
 @misc{BATT3,
  title        = {Selecting the Best Battery for Embedded-System Applications},
  url          = {https://www.edn.com/selecting-the-best-battery-for-embedded-system-applications/},
  abstractnote = {Nonrechargeable, or primary, batteries find wide use in mainstream embedded-system applications (Table 1). This category of batteries includes alkaline},
  journal      = {EDN},
  author       = {EDN},
  year         = {2010},
  month        = nov,
  language     = {en-US}
}
 @inproceedings{BATT4,
  address      = {London},
  title        = {Battery Modelling in Embedded Systems},
  isbn         = {978-1-4471-0671-5},
  doi          = {10.1007/978-1-4471-0671-5_5},
  abstractnote = {Progress in battery technology is closely tied to that in electronics. The fast development in battery-powered portable systems and the increasing demand for longer run time and lighter weight handheld devices is driving battery makers to make new investments and researches into new battery technologies. This resulted in a great improvement in energy density, shelf life and reliability of batteries. However the battery technology progresses are very slow compared to the ones in the electronic field. A typical battery-powered System is represented in Figure 1 [1]. This system is present in portable devices such as laptop computers, cellular phones, etc. It consists of the VLSI circuit, the dc-dc converter and the battery.},
  booktitle    = {Microelectronics and Microsystems},
  publisher    = {Springer},
  author       = {Gemma, Maria Ausilia and Nicolosi, Donata},
  editor       = {Fortuna, Luigi and Ferla, Giuseppe and Imbruglia, Antonio},
  year         = {2002},
  pages        = {85–107},
  language     = {en}
}
 @article{BATT5,
  title        = {Review of battery powered embedded systems design for mission-critical low-power applications},
  doi          = {10.1080/00207217.2017.1409813},
  abstractnote = {The applications and uses of embedded systems is increasingly pervasive. Mission and safety critical systems relying on embedded systems pose specific challenges. Embedded systems is a multi-disciplinary domain, involving both hardware and software. Systems need to be designed in a holistic manner so that they are able to provide the desired reliability and minimise unnecessary complexity. The large problem landscape means that there is no one solution that fits all applications of embedded systems. With the primary focus of these mission and safety critical systems being functionality and reliability, there can be conflicts with business needs, and this can introduce pressures to reduce cost at the expense of reliability and functionality. This paper examines the challenges faced by battery powered systems, and then explores at more general problems, and several real-world embedded systems.},
  journal      = {International Journal of Electronics},
  author       = {Malewski, Matthew and Cowell, David and Freear, Steven},
  year         = {2017},
  month        = dec,
  pages        = {1–17}
}
 @article{BATT6,
  title        = {Review of battery powered embedded systems design for mission-critical low-power applications},
  volume       = {105},
  issn         = {0020-7217},
  doi          = {10.1080/00207217.2017.1409813},
  abstractnote = {The applications and uses of embedded systems is increasingly pervasive. Mission and safety critical systems relying on embedded systems pose specific challenges. Embedded systems is a multi-disciplinary domain, involving both hardware and software. Systems need to be designed in a holistic manner so that they are able to provide the desired reliability and minimise unnecessary complexity. The large problem landscape means that there is no one solution that fits all applications of embedded systems. With the primary focus of these mission and safety critical systems being functionality and reliability, there can be conflicts with business needs, and this can introduce pressures to reduce cost at the expense of reliability and functionality. This paper examines the challenges faced by battery powered systems, and then explores at more general problems, and several real-world embedded systems.},
  number       = {6},
  journal      = {International Journal of Electronics},
  publisher    = {Taylor & Francis},
  author       = {Malewski, Matthew and Cowell, David M. J. and Freear, Steven},
  year         = {2018},
  month        = jun,
  pages        = {893–909}
}

 @misc{BATT7,
  url          = {https://www.toradex.com/blog/using-lithium-ion-batteries-in-embedded-systems},
  abstractnote = {In this blog post we provide you a broad overview of the application of lithium-ion batteries in embedded systems.},
  journal      = {Toradex},
  language     = {en-US}
}


 @misc{nicd,
  title        = {NiCd Battery Charger Circuit},
  url          = {https://theorycircuit.com/nicd-battery-charger-circuit/},
  abstractnote = {We know the nickel–cadmium battery is called as NiCd battery or NiCad battery and this types of rechargeable batteries are made with nickel oxide hydroxide and metallic cadmium as electrodes.…},
  journal      = {theoryCIRCUIT - Do It Yourself Electronics Projects},
  author       = {admin},
  year         = {2019},
  month        = jul,
  language     = {en-US}
}
 @misc{lipo,
  url          = {https://thepihut.com/products/1200mah-3-7v-lipo-battery},
  abstractnote = {LiPo (Lithium Polymer) batteries are a great way to power your portable projects (ideal for the Adafruit Feather!). Compared to other battery chemistries they’re more compact, lighter and offer a consistent voltage output (rather than constantly dropping like other types!). They also offer higher rates of discharge whi},
  journal      = {The Pi Hut},
  language     = {en}
}
 @misc{alkaline,
  url = {https://www.nkon.nl/pt/c-duracell-industrial-1-5v.html}
}
 @misc{18650,
  url = {https://www.nkon.nl/pt/samsung-inr-18650-30q-3000mah.html}
}
 @misc{lead,
  url = {https://www.nkon.nl/pt/rechargeable/lead-acid-batteries/6v-vrla/yuasa-6v-1-2ah-loodaccu.html}
}
 @misc{nimh,
  url = {https://www.nkon.nl/pt/rechargeable/nimh/gp-ni-mh-d-11000mah.html}
}

%-------------------------------------------------------------------------------%

 @misc{mem1,
  title        = {How to Select a Memory Configuration for Embedded Systems},
  url          = {https://www.qt.io/embedded-development-talk/memory-options-for-embedded-systems-how-to-select-the-right-memory-configuration},
  abstractnote = {Learn the pros & cons of embedded system memory options. Plus, expert tips and tables that compare characteristics of different memory types.},
  journal      = {Embedded Development Talk},
  author       = {Avila, Risto},
  year         = {2021},
  month        = dec,
  language     = {en}
}
 @misc{mem2,
  title        = {Computer Memory Types Defined & Compared - Embedded},
  url          = {https://www.embedded.com/introduction-to-memory-types/},
  abstractnote = {Explore The Different Types of Computer Memory Including SRAM, DRAM, Flash, and More. Plus, Find Helpful Comparisons and Examples. Visit Today.},
  journal      = {Embedded.com},
  author       = {Barr, Michael},
  year         = {2001},
  month        = may,
  language     = {en-US}
}
 @inproceedings{mem3,
  address      = {New York, NY, USA},
  series       = {EuroPLoP’21},
  title        = {Embedded Platform Patterns for Distributed and Secure Logging},
  isbn         = {978-1-4503-8997-6},
  url          = {https://dl.acm.org/doi/10.1145/3489449.3490004},
  doi          = {10.1145/3489449.3490004},
  abstractnote = {With the advent of modern embedded systems, logging as a process is becoming more and more prevalent for diagnostic and analytic services. Traditionally, storage and managing of the logged data are generally kept as a part of one entity together with the main logic components. In systems that implement network connections, this activity is usually handled over a remote device. However, enabling remote connection is still considered a limiting factor for many embedded devices due to the demanding production cost. A significant challenge is presented to vendors who need to decide how the data will be extracted and handled for an embedded platform during the design concept phase. It is generally desirable that logging memory modules are able to be addressed as separate units. These devices need to be appropriately secured and verifiable on a different system since data compromise can lead to enormous privacy and even financial losses. In this paper, we present two patterns. First, a pattern that allows flexible logging operation design in terms of module and interface responsibility separation. Second, a pattern for the design of secure logging processes during the utilization of constrained embedded devices. The introduced patterns fulfil the following conditions: (i) flexibility – design is independent of the chip vendors making the logging memory modules easily replaceable, (ii) self-sufficiency – every logging controller is maintained as a separate entity in a decentralized topology, (iii) security – through providing authenticity, confidentiality, and integrity by means of using a dedicated security module.},
  booktitle    = {26th European Conference on Pattern Languages of Programs},
  publisher    = {Association for Computing Machinery},
  author       = {Basic, Fikret and Steger, Christian and Kofler, Robert},
  year         = {2022},
  month        = jan,
  pages        = {1–9},
  collection   = {EuroPLoP’21}
}
 @misc{mem4,
  title        = {Embedded Systems Memory Types: Flash vs SRAM vs EEPROM},
  url          = {https://www.linkedin.com/pulse/embedded-systems-memory-types-flash-vs-sram-eeprom},
  abstractnote = {Embedded systems memory types are crucial components in designing efficient and effective systems. The choice of memory can impact performance, cost, and power consumption.},
  journal      = {Digikey},
  author       = {Beningo, Jacob},
  year         = {2019},
  month        = oct,
  language     = {en}
}
 @inproceedings{mem5,
  title        = {Survey of Memory Optimization Techniques for Embedded Systems},
  doi          = {10.1109/SBESC.2013.35},
  abstractnote = {Memory systems have been pointed out as a main source to the performance and power consumption of embedded software. Embedded systems require low-power consumption, so becomes interesting investigate memory optimization techniques for these systems. There are many techniques in the literature to reduce power/energy consumption and execution time of embedded systems. This work revises and discusses these techniques focusing on hardware and software optimizations.},
  author       = {Brisolara, Lisane and Oliveira, Lizandro and Mattos, Julio},
  year         = {2013},
  month        = nov
}
 @misc{mem6,
  title        = {The case for de-integrating embedded Flash},
  url          = {https://www.embedded.com/the-case-for-de-integrating-embedded-flash/},
  abstractnote = {De-integrating embedded Flash means developers can select a best-in-class SoC based on its performance and scale Flash density independently.},
  journal      = {Embedded.com},
  author       = {Krishnegowda, Sandeep},
  year         = {2022},
  month        = aug,
  language     = {en-US}
}
 @article{mem7,
  title        = {Advances in Emerging Memory Technologies: From Data Storage to Artificial Intelligence},
  volume       = {11},
  rights       = {http://creativecommons.org/licenses/by/3.0/},
  issn         = {2076-3417},
  doi          = {10.3390/app112311254},
  abstractnote = {This paper presents an overview of emerging memory technologies. It begins with the presentation of stand-alone and embedded memory technology evolution, since the appearance of Flash memory in the 1980s. Then, the progress of emerging memory technologies (based on filamentary, phase change, magnetic, and ferroelectric mechanisms) is presented with a review of the major demonstrations in the literature. The potential of these technologies for storage applications addressing various markets and products is discussed. Finally, we discuss how the rise of artificial intelligence and bio-inspired circuits offers an opportunity for emerging memory technology and shifts the application from pure data storage to storage and computing tasks, and also enlarges the range of required specifications at the device level due to the exponential number of new systems and architectures.},
  number       = {2323},
  journal      = {Applied Sciences},
  publisher    = {Multidisciplinary Digital Publishing Institute},
  author       = {Molas, Gabriel and Nowak, Etienne},
  year         = {2021},
  month        = jan,
  pages        = {11254},
  language     = {en}
}
 @misc{mem8,
  title        = {Selecting the Correct Memory Type for Embedded Applications},
  url          = {https://www.electronicdesign.com/technologies/embedded/digital-ics/memory/article/21787261/selecting-the-correct-memory-type-for-embedded-applications},
  abstractnote = {By Alex Martinez, Memory Products Division Microchip Tecnologies The type of memory a designer selects for an embedded project drives overall system operation and performance,...},
  journal      = {Electronic Design},
  author       = {Staff},
  year         = {2007},
  month        = jan
}
 @misc{mem9,
  url          = {https://www.kingston.com/en/blog/personal-storage/microsd-sd-memory-card-guide},
  abstractnote = {What is SDHC, SDXC, SDUC and microSD, microSDHC, microSDXC and microSDUC? What should I use for each type of device?  We will guide you through selecting the right card for your gear.},
  journal      = {Kingston Technology Company},
  year         = {2021},
  month        = jan,
  language     = {en}
}
 @misc{mem10,
  url          = {https://www.kingston.com/en/blog/pc-performance/hdd-vs-external-ssd},
  abstractnote = {Consumers seeking additional storage can choose an HDD or external SSD. Which has more advantages?},
  journal      = {Kingston Technology Company},
  year         = {2023},
  month        = dec,
  language     = {en}
}

 @misc{mem11,
  url          = {https://www.digikey.pt/en/articles/the-fundamentals-of-embedded-memory},
  abstractnote = {Understand the fundamentals of embedded memory—EEPROM vs FRAM vs eMMC vs SD Cards—to know which ones to use, where, and how.},
  journal      = {DigiKey},
  language     = {en-pt}
}


%-------------------------------------------------------------------------------%

 @misc{OBC1,
  title        = {FPGA vs. Microcontroller: Understanding the Key Differences},
  url          = {https://www.wevolver.com/article/fpga-vs-microcontroller-understanding-the-key-differences},
  abstractnote = {Field Programmable Gate Arrays (FPGAs) and microcontrollers are essential components in electronics and embedded systems. While they have certain similarities, they also stand out in a way that makes them suitable for different applications. This article explores the key differences between FPGAs and microcontrollers.},
  author       = {Ayodele, Abiola}
}
 @article{OBC2,
  title        = {An introduction to microcontrollers and embedded systems},
  abstractnote = {Embedded systems are combinations of computer hardware and software designed for a specific function within a larger system. These systems in robotics are the framework that allows electro-mechanical systems to be implemented into modern machines. The key aspects of this framework are C programming in embedded controllers, circuit design for interfacing microcontrollers with sensors and actuators, proper filtering for post processing and real-time analysis of measured data, and control of those hardware components. This document will cover the basics of C/C++ programming, including the basics of the C language in hardware interfacing, communication, and algorithms for state machines and controllers. In order to interface these controllers with the world around us, this document will also cover electrical circuits required to operate controllers, sensors, and actuators accurately and effectively. Finally, some of the more commonly used hardware that is interfaced with microcontrollers is gone over.},
  author       = {Lambert, Tyler Ross},
  language     = {en}
}
 @article{OBC3,
  title    = {Comparing and Contrasting FPGA and Microprocessor System Design and Development},
  author   = {Parnell, Karen and Bryner, Roger},
  year     = {2004},
  language = {en}
}
 @article{OBC4,
  title   = {Embedded systems education for the future},
  volume  = {88},
  issn    = {0018-9219, 1558-2256},
  doi     = {10.1109/5.811598},
  number  = {1},
  journal = {Proceedings of the IEEE},
  author  = {Wolf, W. and Madsen, J.},
  year    = {2000},
  month   = jan,
  pages   = {23–30}
}
 @misc{OBC5,
  url          = {https://community.element14.com/technologies/fpga-group/b/blog/posts/comparing-an-fpga-to-a-microcontroller-microprocessor-or-an-asic},
  abstractnote = {A Field Programmable Gate Array or FPGA is an integrated circuit that could contain millions of logic gates that can be electrically configured to perform a certain task. But how does an FPGA compare to a microcontroller, microprocessor or an application specific IC?.Microcontroller vs FPGA: The str},
  year         = {2018},
  month        = feb,
  language     = {en}
}
