package mealyFSM.generator01.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import java.util.Collection;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static Object propertyMacro_GetValue_2_0(final PropertyMacroContext _context) {
    return SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_2_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).toUpperCase();
  }
  public static Object propertyMacro_GetValue_2_2(final PropertyMacroContext _context) {
    return SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_2_3(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).toUpperCase();
  }
  public static Object propertyMacro_GetValue_2_4(final PropertyMacroContext _context) {
    return SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_2_5(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).toUpperCase();
  }
  public static Object propertyMacro_GetValue_2_6(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_7(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.action$qMDH), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_8(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$_JvO), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_9(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.target$_P8c), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_10(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object referenceMacro_GetReferent_2_0(final ReferenceMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.intialState$_Imc), PROPS.name$MnvL).toUpperCase();
  }
  public static Object referenceMacro_GetReferent_2_1(final ReferenceMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$_JvO), PROPS.name$MnvL).toUpperCase();
  }
  public static Object referenceMacro_GetReferent_2_2(final ReferenceMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.target$_P8c), PROPS.name$MnvL).toUpperCase();
  }
  public static Iterable<SNode> sourceNodesQuery_2_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.state$xyUV);
  }
  public static Iterable<SNode> sourceNodesQuery_2_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.event$xrSt);
  }
  public static Iterable<SNode> sourceNodesQuery_2_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.action$xsmv);
  }
  public static Iterable<SNode> sourceNodesQuery_2_3(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.state$xyUV);
  }
  public static Iterable<SNode> sourceNodesQuery_2_4(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.transition$_8QF);
  }
  public static Iterable<SNode> sourceNodesQuery_2_5(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.state$xyUV);
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("892979099377748247", new SNsQ(i++));
    snsqMethods.put("8214813062549389728", new SNsQ(i++));
    snsqMethods.put("892979099380268528", new SNsQ(i++));
    snsqMethods.put("5807170980297199032", new SNsQ(i++));
    snsqMethods.put("3042965236144270174", new SNsQ(i++));
    snsqMethods.put("8214813062549453883", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_2(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_3(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_4(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_5(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("8214813062549272632", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("8214813062549266432", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "STATE"));
    pvqMethods.put("8214813062549389720", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("8214813062549389734", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "EVENT"));
    pvqMethods.put("892979099380268520", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("892979099380268534", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "ACTION"));
    pvqMethods.put("3042965236144499187", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "State"));
    pvqMethods.put("892979099380415321", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "Action"));
    pvqMethods.put("3042965236144533721", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "Event"));
    pvqMethods.put("3042965236144579420", new PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "State"));
    pvqMethods.put("5807170980297116779", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "AStateMachine"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_2_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_2_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_2_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_2_3(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_2_4(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_2_5(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_2_6(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_2_7(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_2_8(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetValue_2_9(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetValue_2_10(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("8214813062549313917", new RTQ(0, "STATE"));
    rtqMethods.put("957542074890420549", new RTQ(1, "EVENT"));
    rtqMethods.put("3042965236144383314", new RTQ(2, "STATE"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    ReferenceTargetQuery query = queryKey.forTemplateNode(rtqMethods);
    return (query != null ? query : super.getReferenceTargetQuery(queryKey));
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_2_0(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_2_1(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_2_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink action$qMDH = MetaAdapterFactory.getReferenceLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0aeL, 0x49c166ced2b97d5cL, "action");
    /*package*/ static final SReferenceLink event$_JvO = MetaAdapterFactory.getReferenceLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0aeL, 0x49c166ced2b97867L, "event");
    /*package*/ static final SReferenceLink target$_P8c = MetaAdapterFactory.getReferenceLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0aeL, 0x49c166ced2b9786aL, "target");
    /*package*/ static final SReferenceLink intialState$_Imc = MetaAdapterFactory.getReferenceLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0b1L, 0x49c166ced2b97862L, "intialState");
    /*package*/ static final SContainmentLink state$xyUV = MetaAdapterFactory.getContainmentLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0b1L, 0x350e7bfe0ac9d318L, "state");
    /*package*/ static final SContainmentLink event$xrSt = MetaAdapterFactory.getContainmentLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0b1L, 0x350e7bfe0ac9d30fL, "event");
    /*package*/ static final SContainmentLink action$xsmv = MetaAdapterFactory.getContainmentLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0b1L, 0x350e7bfe0ac9d311L, "action");
    /*package*/ static final SContainmentLink transition$_8QF = MetaAdapterFactory.getContainmentLink(0xdc97585e752a461cL, 0x8b396a0782f6bf23L, 0x350e7bfe0ac9d0adL, 0x49c166ced2b96c4aL, "transition");
  }
}
